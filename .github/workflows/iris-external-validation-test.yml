name: Iris External Validation Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-apptainer-image:
    runs-on: [self-hosted, mi3008x]
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Apptainer
        run: |
          apt-get update && apt-get install -y software-properties-common
          add-apt-repository -y ppa:apptainer/ppa
          apt-get update && apt-get install -y apptainer

      - name: Build Iris Apptainer container
        run: |
          # Create persistent Apptainer directory
          mkdir -p ~/apptainer

          # Build Apptainer image from definition file (only if it doesn't exist)
          if [ ! -f ~/apptainer/iris-dev.sif ]; then
            echo "Building new Apptainer image..."
            apptainer build ~/apptainer/iris-dev.sif apptainer/iris.def
          else
            echo "Using existing Apptainer image"
          fi

  external-validation-test:
    name: External Validation Test
    needs: build-apptainer-image
    runs-on: [self-hosted, mi3008x]
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cleanup lingering ports before tests
        run: |
          bash .github/scripts/cleanup_ports.sh

      - name: Run External Validation Test with Apptainer
        run: |
          set -e

          # Create unique overlay image for isolation
          OVERLAY="/tmp/iris_overlay_$(whoami)_external_$(date +%s%N).img"

          echo "::group::Creating overlay image"
          apptainer overlay create --size 1024 --create-dir /var/cache/iris "${OVERLAY}"
          echo "::endgroup::"

          echo "::group::Running external validation test"
          apptainer exec --overlay "${OVERLAY}" --no-home --cleanenv \
            --bind "${PWD}:/iris_workspace" --cwd /iris_workspace \
            ~/apptainer/iris-dev.sif bash -c "
              set -e
              pip install git+https://github.com/${{ github.repository }}.git@${{ github.sha }}
              wget -O test_iris_distributed.py https://gist.githubusercontent.com/mawad-amd/6375dc078e39e256828f379e03310ec7/raw/a527c3192bee4615292769e340b1c73676f6945a/test_iris_distributed.py
              python test_iris_distributed.py
            "
          echo "::endgroup::"

          # Cleanup overlay image
          echo "::group::Cleaning up overlay image"
          rm -f "${OVERLAY}"
          echo "::endgroup::"

          echo "âœ… External validation test passed!"

      - name: Cleanup lingering ports
        if: always()
        run: |
          bash .github/scripts/cleanup_ports.sh